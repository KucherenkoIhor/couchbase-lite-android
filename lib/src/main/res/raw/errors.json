[{"message": "Unable to create database directory.", "name": "CreateDBDirectoryFailed"}, {"message": "Failed to resolve a default directory! If you have overriden the default directory, please check it.  Otherwise please file a bug report.", "name": "ResolveDefaultDirectoryFailed"}, {"message": "Cannot close the database. Please stop all of the replicators before closing the database.", "name": "CloseDBFailedReplications"}, {"message": "Cannot close the database. Please remove all of the query listeners before closing the database.", "name": "CloseDBFailedQueryListeners"}, {"message": "Cannot delete the database. Please stop all of the replicators before closing the database.", "name": "DeleteDBFailedReplications"}, {"message": "Cannot delete the database. Please remove all of the query listeners before closing the database.", "name": "DeleteDBFailedQueryListeners"}, {"message": "Cannot delete a document that has not yet been saved.", "name": "DeleteDocFailedNotSaved"}, {"message": "The document doesn't exist in the database.", "name": "DocumentNotFound"}, {"message": "Cannot operate on a document from another database.", "name": "DocumentAnotherDatabase"}, {"message": "A document contains a blob that was saved to a different database. The save operation cannot complete.", "name": "BlobDifferentDatabase"}, {"message": "No data available to write for install. Please ensure that all blobs in the document have non-null content.", "name": "BlobContentNull"}, {"message": "Resolved document has a null body.", "name": "ResolvedDocContainsNull"}, {"message": "LiteCore failed resolving conflict.", "name": "ResolvedDocFailedLiteCore"}, {"message": "Resolved document's database {0} is different from expected database {1}.", "name": "ResolvedDocWrongDb"}, {"message": "Attempt to perform an operation on a closed database.", "name": "DBClosed"}, {"message": "No revision data on the document!", "name": "NoDocumentRevision"}, {"message": "Specified fragment path does not exist in object; cannot set value.", "name": "FragmentPathNotExist"}, {"message": "{0} is not a valid type. You may only pass {1}  byte, sbyte, short, ushort, int, uint, long, ulong, float, double, bool, DateTimeOffset, Blob, one-dimensional array or a dictionary whose members are one of the precedingabove types.", "name": "InvalidCouchbaseObjType"}, {"message": "Non-string or null key in data to be deserialized.", "name": "InvalidValueToBeDeserialized"}, {"message": "Blob has no data available.", "name": "BlobContainsNoData"}, {"message": "{0} must be a file-based URL.", "name": "NotFileBasedURL"}, {"message": "Stream is not open.", "name": "BlobReadStreamNotOpen"}, {"message": "Cannot set logging level without a configuration.", "name": "CannotSetLogLevel"}, {"message": "Invalid scheme for URLEndpoint url ({0}). It must be either 'ws:' or 'wss:'.", "name": "InvalidSchemeURLEndpoint"}, {"message": "Embedded credentials in a URL (username:password@url) are not allowed. Use the BasicAuthenticator class instead.", "name": "InvalidEmbeddedCredentialsInURL"}, {"message": "Replication cannot be started after disposal.", "name": "ReplicatorDisposed"}, {"message": "Replicator is not stopped. Resetting checkpoint is only allowed when the replicator is in the stopped state.", "name": "ReplicatorNotStopped"}, {"message": "Query parameters are not allowed to contain collections.", "name": "QueryParamNotAllowedContainCollections"}, {"message": "Missing AS clause for JOIN.", "name": "MissASforJoin"}, {"message": "Missing ON statement for JOIN.", "name": "MissONforJoin"}, {"message": "Expressions must either be IExpression or String.", "name": "ExpressionsMustBeIExpressionOrString"}, {"message": "Invalid expression value for expression of Between({0}).", "name": "InvalidExpressionValueBetween"}, {"message": "This result set has already been enumerated. Please re-run Execute() on the original query.", "name": "ResultSetAlreadyEnumerated"}, {"message": "{0} expressions must contain at least one element.", "name": "ExpressionsMustContainOnePlusElement"}, {"message": "Duplicate select result named {0}.", "name": "DuplicateSelectResultName"}, {"message": "The default database must have an alias in order to use a JOIN statement (Make sure your data source uses the As() function).", "name": "NoAliasInJoin"}, {"message": "Invalid query: The database is null.", "name": "InvalidQueryDBNull"}, {"message": "Invalid query: missing Select or From.", "name": "InvalidQueryMissingSelectOrFrom"}, {"message": "Cannot remove items from a non-mutable MArray.", "name": "CannotRemoveItemsFromNonMutableMArray"}, {"message": "Cannot remove start from an index less than 0 (got {0}).", "name": "CannotRemoveStartingFromIndexLessThan"}, {"message": "Cannot remove a range that ends before it starts (got = {0}, count = {1}).", "name": "CannotRemoveRangeEndsBeforeItStarts"}, {"message": "Range end for remove exceeds the length of the array (got start = {0}, count = {1}).", "name": "RangeEndForRemoveExceedsArrayLength"}, {"message": "Cannot set items in a non-mutable MArray.", "name": "CannotSetItemsInNonMutableMArray"}, {"message": "Cannot clear a non-mutable MArray.", "name": "CannotClearNonMutableMArray"}, {"message": "Cannot insert items in a non-mutable MArray.", "name": "CannotInsertItemsInNonMutableMArray"}, {"message": "Cannot clear a non-mutable MDict.", "name": "CannotClearNonMutableMDict"}, {"message": "Cannot set items in a non-mutable MDict.", "name": "CannotSetItemsInNonMutableInMDict"}]